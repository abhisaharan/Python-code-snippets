Threading Python
-	How to create a thread:
import threading
def creates_items():
    global total
    for i in range(10):
        time.sleep(2)
        print('added item')
        total += 1
    print('creation is done')

creator1 = threading.Thread(target  = creates_items) # creating thread creator1.start() # starting thread. It start calls the run method.
creator1.join()  # join the thread result

-	Daemons threads: to turn simple thread to daemon thread Ex:
Thread_variable_object = threading.Thread(target = function_name, daemon = True)
Daemon threads ends when main thread or program ends. Here the limitor is the daemon thread and creator1 and creator2 is main thread. https://github.com/moondra2017/Threading-Queue/blob/master/daemon_thread_part3.py
-	Locks: are used when we have many threads trying to access or make changes to the same variable usually a global variable. Implementation:

lock = threading.Lock()
In function definition:
With lock:		# context manager used as learned in file handling. It closes
   Indented_for loop	 files automatically. When using “with” context manager.  	We use lock.acquire() and lock.release().
-	Queue:  basically a container of data items/commands waiting to be retrieved.
FIFO, LIFO, Priority. https://www.youtube.com/watch?v=bnm5_GH04fM
Implementation:
Import queue
q = queue.Queue()	#this is FIFO
q=queue.LifoQueue()   #rhis LIFO
q=queue.PriorityQueue()  #priority queue – lowest value pulled out first
q.put(5)		#putting item in queue
q.get(5)		#get the item
q.empty()		#print the Boolean value. Used to check if queue is empty

blocking or freezing happens if we try to get value from empty queue. We can solve it using threading and daemon.

-	Events:
event = Threading.event()
event.set()	# event object can be set to true with this method
event.clear()	# can be set to False with this method

event.wait()	#it blocks until the event.set() is True(or called). To check we use while event.is_set():
		--under here code--
	https://www.youtube.com/watch?v=YSjIisKdgD0&list=PLGKQkV4guDKEv1DoK4LYdo2ZPLo6cyLbm&index=9

